// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// max_cycle_length
int max_cycle_length(std::string cycle_length, std::string time_scale);
RcppExport SEXP _twdtwr_max_cycle_length(SEXP cycle_lengthSEXP, SEXP time_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type cycle_length(cycle_lengthSEXP);
    Rcpp::traits::input_parameter< std::string >::type time_scale(time_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(max_cycle_length(cycle_length, time_scale));
    return rcpp_result_gen;
END_RCPP
}
// dtw2vec
double dtw2vec(const arma::vec& x, const arma::vec& y, double time_weight);
RcppExport SEXP _twdtwr_dtw2vec(SEXP xSEXP, SEXP ySEXP, SEXP time_weightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time_weight(time_weightSEXP);
    rcpp_result_gen = Rcpp::wrap(dtw2vec(x, y, time_weight));
    return rcpp_result_gen;
END_RCPP
}
// twdtw
double twdtw(const arma::vec& x, const arma::vec& y, const std::string& cycle_length, const std::string& time_scale, double alpha, double beta);
RcppExport SEXP _twdtwr_twdtw(SEXP xSEXP, SEXP ySEXP, SEXP cycle_lengthSEXP, SEXP time_scaleSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const std::string& >::type cycle_length(cycle_lengthSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type time_scale(time_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(twdtw(x, y, cycle_length, time_scale, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_twdtwr_max_cycle_length", (DL_FUNC) &_twdtwr_max_cycle_length, 2},
    {"_twdtwr_dtw2vec", (DL_FUNC) &_twdtwr_dtw2vec, 3},
    {"_twdtwr_twdtw", (DL_FUNC) &_twdtwr_twdtw, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_twdtwr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
